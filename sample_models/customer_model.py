from pandera.pandas import DataFrameSchema, Column, Check


check_sex = ["M", "F"]
check_postal_code_lengths = [5]
check_states = state_abbreviations = [
    "AL",
    "AK",
    "AZ",
    "AR",
    "CA",
    "CO",
    "CT",
    "DC",
    "DE",
    "FL",
    "GA",
    "HI",
    "ID",
    "IL",
    "IN",
    "IA",
    "KS",
    "KY",
    "LA",
    "ME",
    "MD",
    "MA",
    "MI",
    "MN",
    "MS",
    "MO",
    "MT",
    "NE",
    "NV",
    "NH",
    "NJ",
    "NM",
    "NY",
    "NC",
    "ND",
    "OH",
    "OK",
    "OR",
    "PA",
    "RI",
    "SC",
    "SD",
    "TN",
    "TX",
    "UT",
    "VT",
    "VA",
    "WA",
    "WV",
    "WI",
    "WY",
]


schema = DataFrameSchema(
    columns={
        "customer_id": Column(
            dtype=str,
            nullable=False,
            unique=True,
            coerce=True,
            required=True,
        ),
        "first_name": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "last_name": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "age": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "sex": Column(
            checks=Check.isin(check_sex),
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_street_number": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_street_name": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_city": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_state": Column(
            dtype=str,
            checks=Check.isin(check_states),
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_postal_code": Column(
            checks=[Check(lambda s: len(s) == 5, element_wise=True, name="check_postal_code_5_digits")],
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
        "address_country": Column(
            dtype=str,
            nullable=True,
            unique=False,
            coerce=True,
            required=True,
        ),
    },
    coerce=True,
    strict=True,
    ordered=True,
    report_duplicates="all",
    unique_column_names=True,
    add_missing_columns=False,
    name="Customer_model",
    title="Customer Model",
    description="Schema for customer data model",
)
